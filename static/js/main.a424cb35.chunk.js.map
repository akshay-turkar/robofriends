{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/ErrorBoundary.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","map","user","i","SearchBox","searchFeild","searchChange","type","placeholder","onChange","ErrorBoundary","props","state","hasError","error","info","this","setState","children","Component","Scroll","style","overflow","height","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAE5B,OACC,sBAAKC,UAAW,sDAAhB,UACC,qBAAKC,IAAG,+BAA2BF,EAA3B,iBAA8CG,IAAM,SAC5D,gCACC,6BAAKL,IACL,4BAAIC,WCaOK,EAnBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAElB,OACC,8BAEGA,EAAOC,KAAI,SAACC,EAAMC,GAClB,OACC,cAAC,EAAD,CAEDR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCMKC,EAfG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAChC,OACE,qBAAKV,UAAY,MAAjB,SACC,uBACCA,UAAY,mCACZW,KAAK,SACLC,YAAY,gBACZC,SAAYH,OCcFI,E,kDApBd,WAAYC,GAAQ,IAAD,8BAClB,gBACKC,MAAQ,CACZC,UAAU,GAHO,E,qDAOnB,SAAkBC,EAAOC,GACxBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAE3B,WAEC,OAAGG,KAAKJ,MAAMC,SACN,4DAGDG,KAAKL,MAAMO,a,GAjBQC,aCSbC,G,MATA,SAACT,GAEhB,OACE,qBAAKU,MAAS,CAACC,SAAU,SAAUC,OAAQ,SAA3C,SACEZ,EAAMO,aC8CKM,E,kDA3Cb,aAAc,IAAD,8BACX,gBAaFC,eAAiB,SAACC,GACZ,EAAKT,SAAS,CAACU,YAAaD,EAAME,OAAOC,SAb7C,EAAKjB,MAAQ,CACXZ,OAAQ,GACR2B,YAAa,IAJJ,E,qDAQb,WAAoB,IAAD,OACjBG,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKjB,SAAS,CAACjB,OAAQkC,S,oBAO1C,WAAS,IAAD,EAEwBlB,KAAKJ,MAA5BZ,EAFD,EAECA,OAAQ2B,EAFT,EAESA,YACTQ,EAAiBnC,EAAOoC,QAAO,SAAAC,GACjC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASZ,EAAYW,kBAGzD,OAAQtC,EAAOwC,OAGX,sBAAK5C,UAAY,KAAjB,UACM,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcU,KAAKS,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUzB,OAAQmC,WAP9B,6C,GA3BYhB,aCIHsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAIjDX,M","file":"static/js/main.a424cb35.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n\t\r\n\treturn( \r\n\t\t<div className= \"bg-light-green tc dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n\t\t\t<img src ={`https://robohash.org/${id}?size=200x200`} alt = \"robo\"/>\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\t\r\n\t\t);\r\n}\r\nexport default Card;\r\n//tachyons predefiened classes used inside className\r\n//if you want to add js in jsx use {}\r\n//we have use ES6 in line 4 to make it cleaner\r\n// if we didnt initialize props the we have to use\r\n//props.name\r\n//props.email","import React from 'react';\r\nimport Card from './Card';\r\n//import { robots } from './robots';\r\nconst CardList = ({robots}) => {\r\n\t\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\t\t\trobots.map((user, i) => {\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t <Card \r\n\t\t\t\t\tkey={i} \r\n\t\t\t\t\tid={robots[i].id}   \r\n\t\t\t\t\tname={robots[i].name} \r\n\t\t\t\t\temail={robots[i].email}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</div>\r\n\t\t);\r\n}\r\nexport default CardList  ","import React from 'react';\r\n\r\nconst SearchBox = ({searchFeild, searchChange}) => {\r\n\treturn(\r\n\t\t\t<div className = \"pa2\">\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName = \"pa3 ba b--green bg-lightest-blue\" \r\n\t\t\t\t\ttype=\"search\" \r\n\t\t\t\t\tplaceholder=\"Search Robots\"\r\n\t\t\t\t\tonChange = {searchChange}\r\n\t\t\t\t />\r\n\t\t\t</div>\r\n\t\t);\r\n}\r\n\r\n\r\n\r\nexport default SearchBox;\r\n//it is nessasary to assign same name  to the function as the file","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch(error, info){\r\n\t\tthis.setState({ hasError: true})\r\n\t}\r\n\trender()\r\n\t{\r\n\t\tif(this.state.hasError) {\r\n\t\t\treturn <h1> Ooooops. That is not good</h1>\r\n\t\t}\r\n\r\n\t\treturn this.props.children;\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\t\r\nreturn (\r\n\t\t<div style = {{overflow: 'scroll', height: \"800px\"}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Scroll;\r\n","import React, {Component} from 'react';\nimport CardList from '../components/CardList';\n//import { robots } from '../components/robots';\nimport SearchBox from '../components/SearchBox';\nimport ErrorBoundary from '../components/ErrorBoundary'\nimport './App.css';\nimport Scroll from '../components/Scroll';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      robots: [],\n      searchfield: \"\"\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())//parsing converting to json\n      .then(users => this.setState({robots: users}));//jason parsing is done here now we dont need import robots\n  }\n\n  onSearchChange = (event) => {\n        this.setState({searchfield: event.target.value}); \n  }\n\n  render(){\n\n    const {robots, searchfield} = this.state;\n    const filteredRobots = robots.filter(robot =>{\n        return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n        })\n\n    return !robots.length ?\n      <h1>Loading</h1>:\n      \n        <div className = \"tc\">\n              <h1 className=\"f1\">RoboFriends</h1>\n              <SearchBox searchChange={this.onSearchChange}/>\n              <Scroll>\n                <ErrorBoundary>\n                  <CardList robots={filteredRobots} />\n                </ErrorBoundary>\n              </Scroll>\n        </div>\n      \n  \n    \n  }\n}  \n\nexport default App;\n//STATE V/S PROPS","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n\n\nreportWebVitals();\n//we used div because we and use only single component\n//we can add as much as card component inside div"],"sourceRoot":""}